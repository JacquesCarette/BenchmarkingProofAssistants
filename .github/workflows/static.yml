# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  os: ubuntu-latest
  ghc-version: '9.4.8'
  cabal-version: '3.12.1.0'

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ‚¨áÔ∏è
        uses: actions/checkout@v4

      - name: Setup Pages üìñ
        uses: actions/configure-pages@v5

      - name: Setup Linux environment üêß
        run: |
          echo "ghcup=/usr/local/.ghcup" >> $GITHUB_ENV
          echo "cabal-store=/home/runner/.cabal/store" >> $GITHUB_ENV
          # tar doesn't get run with the right permissions when unpacking the
          # cache on linux, so we just chown the ghcup directory.
          sudo chown -R $(whoami):$(id -ng) ~/.ghcup/

      - name: Restore ghcup cache ‚ôªÔ∏è
        uses: actions/cache/restore@v4
        id: ghcup-cache
        env:
          key: ${{ env.os }}-ghc-${{ env.ghc-version }}-cabal-${{ env.cabal-version }}
        with:
          path: ${{ env.ghcup }}
          key: ${{ env.os }}-ghc-${{ env.ghc-version }}-cabal-${{ env.cabal-version }}
          restore-keys: ${{ env.key }}-

      - name: Install GHC ${{ env.ghc-version }} and Cabal ${{ env.cabal-version }} üê¨
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ env.ghc-version }}
          cabal-version: ${{ env.cabal-version }}

      - name: Cabal configure üßô
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run

      - name: Restore dependency cache ‚ôªÔ∏è
        uses: actions/cache/restore@v4
        id: cabal-cache
        env:
          key: ${{ env.os }}-ghc-${{ env.ghc-version }}-cabal-${{ env.cabal-version }}
        with:
          path: ${{ env.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies ‚¨áÔ∏è
        if: steps.cabal-cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      - name: Build üõ†Ô∏è
        run: cabal run panbench-site -- _build/site/index.html

      - name: Upload artifact ‚¨ÜÔ∏è
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '_build/site'

      - name: Deploy to GitHub Pages üìñ
        id: deployment
        uses: actions/deploy-pages@v4
