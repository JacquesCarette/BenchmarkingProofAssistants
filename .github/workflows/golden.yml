# CI workflow for running golden tests.
# See https://github.com/haskell-actions/setup/blob/main/docs/examples.md#model-cabal-workflow-with-caching

on: [push, pull_request]
name: Golden Tests

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc-version: ['9.4.8']
        cabal-version: ['3.12.1.0']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Checkout ‚¨áÔ∏è
        uses: actions/checkout@v4
        
      - name: Restore ghcup cache ‚ôªÔ∏è
        uses: actions/cache/restore@v4
        id: ghcup-cache
        env:
          ghcup: ${{ (runner.os == 'Linux' && '/home/runner/.ghcup') || (runner.os == 'macOS' && '/Users/runner/.ghcup') || (runner.os == 'Windows' && 'C:\ghcup') }}
          cabal-store: ${{ (runner.os == 'Linux' && '/home/runner/.cabal/store') || (runner.os == 'macOS' && '/Users/runner/.cabal/store') || (runner.os == 'Windows' && 'C:\sr') }}
          key: ${{ matrix.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ matrix.cabal-version }}
        with:
          path: ${{ env.ghcup }}
          key: ${{ matrix.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ matrix.cabal-version }}
          restore-keys: ${{ env.key }}-
          
      # There is no narwhal emoji? Very upsetting.
      - name: Set up GHC ${{ matrix.ghc-version }} üê¨
        # Only install GHC/cabal if they aren't present in our cache.
        if: steps.ghcup-cache.outputs.cache-hit != 'true'
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}

      - name: Cache ghcup üíæ
        uses: actions/cache/save@v4
        if: steps.ghcup-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ env.ghcup }}
          key: ${{ steps.ghcup-cache.outputs.cache-primary-key }}
        
      # We need to generate the build plan so that we can use it for a caching key.
      - name: Cabal configure üßô
        run: |
          echo $PATH
          ghc --version
          cabal --version
          cabal update
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run
          
      - name: Restore dependency cache ‚ôªÔ∏è
        uses: actions/cache/restore@v4
        id: cabal-cache
        env:
          key: ${{ matrix.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ matrix.cabal-version }}
        with:
          path: ${{ env.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-
          
      - name: Install dependencies ‚¨áÔ∏è
        if: steps.cabal-cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies
        
      - name: Cache dependencies üíæ
        uses: actions/cache/save@v4
        if: steps.cabal-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ env.cabal-store }}
          key: ${{ steps.cabal-cache.outputs.cache-primary-key }}
          
      - name: Build üõ†Ô∏è
        run: cabal build all
        
      - name: Golden tests üíµ  
        run: cabal test all --test-options="--no-create"
